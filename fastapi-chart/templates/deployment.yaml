apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "api.name" . }}
  namespace: {{include "api.namespaceName" .}}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "api.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "api.labels" . | nindent 8 }}
    spec:
      {{- if .Values.vault.enabled }}
      volumes:
      - name: cert-path
        secret:
          secretName: {{ include "api.name" . }}-cert
      {{- end }}
      containers:
      - name: fastapi-app
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 5000
          name: http
        {{- if .Values.vault.enabled }}
        volumeMounts:
        - name: cert-path
          mountPath: /ssl/certs
        {{- end }}
        envFrom:
        - configMapRef:
            name: {{ include "api.name" . }}-env
        {{- if .Values.vault.enabled }}
        - secretRef:
            name: {{ include "api.name" . }}-secrets
        {{- end }}
        {{- with .Values.resources }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        {{- end }}
        readinessProbe:
          httpGet:
            path: /healthcheck
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 60
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 60
      
